"""
View –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /memes.
–°—Ç–∏–ª—å RecallDev: —Ç–æ–ª—å–∫–æ import module, type hints, docstrings, flat code.
"""

import logging
import os

from telegram import InlineKeyboardButton, InlineKeyboardMarkup

import src.constants.constants as constants
import src.constants.texts as texts
import src.utils as utils
from telegram_rest_mvc import views

logger = logging.getLogger(__name__)


class MemesView(views.View):
    async def command(self):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /memes: –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –º–µ–º–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞.
        –í–µ–¥—ë—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–æ–≤.
        """
        logger.info(
            "/memes command started for user_id=%s",
            getattr(self.update.effective_user, "id", None),
        )
        meme_dir = os.path.join(
            os.path.dirname(os.path.dirname(__file__)), "..", "memes"
        )
        try:
            meme_files = [
                f
                for f in os.listdir(meme_dir)
                if f.lower().endswith((".jpg", ".jpeg", ".png", ".webp"))
            ]
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –º–µ–º–æ–≤: %s", e)
            await self.update.message.reply_text(constants.NO_MEMES)
            return
        logger.info("–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –º–µ–º–æ–≤: %d", len(meme_files))
        if not meme_files:
            await self.update.message.reply_text(constants.NO_MEMES)
            logger.warning("–ù–µ—Ç –º–µ–º–æ–≤ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!")
            return
        for idx, meme_file in enumerate(meme_files, 1):
            file_path = os.path.join(meme_dir, meme_file)
            try:
                with open(file_path, "rb") as photo:
                    callback_data = f"select_meme:{meme_file}"
                    logger.info(f"–°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É —Å callback_data={callback_data}")
                    keyboard = InlineKeyboardMarkup(
                        [
                            [
                                InlineKeyboardButton(
                                    constants.MEME_CHOOSE_BTN + " üí¶",
                                    callback_data=callback_data,
                                )
                            ]
                        ]
                    )
                    caption = (
                        texts.MEME_CAPTION(idx, os.path.splitext(meme_file)[0])
                        + "\n–í—ã–±–µ—Ä–∏, –µ—Å–ª–∏ –Ω–µ –±–æ–∏—à—å—Å—è —Å—Ç–∞—Ç—å –ª–µ–≥–µ–Ω–¥–æ–π! ü§†"
                    )
                    await self.update.message.reply_photo(
                        photo=photo, caption=caption, reply_markup=keyboard
                    )
                    logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–º: %s (idx=%d)", meme_file, idx)
            except Exception as e:
                logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–º–∞ %s: %s", meme_file, e)
